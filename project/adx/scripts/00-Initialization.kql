.execute database script <|
//
.create-merge table ProbesMeasures
(
    SimulationRun:string,
    SimulationDate:datetime,
    SimulationName:string,
    ProbeDate:datetime,
    ProbeName:string,
    ProbeRun:long,
    ProbeType:string,
    SimulatedDate:datetime,
    CommonRaw:dynamic,
    FactsRaw:dynamic
)
//
.create-or-alter table ProbesMeasures ingestion json mapping "ProbesMeasuresMapping"
    '['
    '    { "column" : "SimulationRun", "Properties":{"Path":"$.simulation.run"}},'
    '    { "column" : "SimulationDate", "Properties":{"Path":"$.simulation.date"}},'
    '    { "column" : "SimulationName", "Properties":{"Path":"$.simulation.name"}},'
    '    { "column" : "ProbeDate", "Properties":{"Path":"$.probe.date"}},'
    '    { "column" : "ProbeName", "Properties":{"Path":"$.probe.name"}},'
    '    { "column" : "ProbeRun", "Properties":{"Path":"$.probe.run"}},'
    '    { "column" : "ProbeType", "Properties":{"Path":"$.probe.type"}},'
    '    { "column" : "SimulatedDate", "Properties":{"Path":"$.facts_common.MeasureDate"}},'
    '    { "column" : "CommonRaw", "Properties":{"Path":"$.facts_common"}},'
    '    { "column" : "FactsRaw", "Properties":{"Path":"$.facts"}},'
    ']'
//
.create-merge table SimulationTotalFacts
(
    SimulationId:string,
    State:string,
    Type:string,
    SentMessagesTotal: long,
    SentFactsTotal: long
)
//
.create-or-alter table SimulationTotalFacts ingestion json mapping "SimulationTotalFactsMapping"
    '['
    '    { "column" : "SimulationId", "Properties":{"Path":"$.sagaId"}},'
    '    { "column" : "State", "Properties":{"Path":"$.state"}},'
    '    { "column" : "Type", "Properties":{"Path":"$.type"}},'
    '    { "column" : "SentMessagesTotal", "Properties":{"Path":"$.sentMessagesTotal"}},'
    '    { "column" : "SentFactsTotal", "Properties":{"Path":"$.sentFactsTotal"}},'
    ']'
//
.create-merge table ScenarioMetadata
(
    OrganizationId:string,
    WorkspaceId:string,
    ScenarioId:string,
    Name:string,
    Description:string,
    ParentId:string,
    SolutionName:string,
    RunTemplateName:string,
    ValidationStatus:string,
    UpdateTime:datetime
)
//
.create-or-alter table ScenarioMetadata ingestion csv mapping "ScenarioMetadataMapping"
    '['
    '    { "column" : "OrganizationId", "DataType":"string", "Properties":{"Ordinal":"0"}},'
    '    { "column" : "WorkspaceId", "DataType":"string", "Properties":{"Ordinal":"1"}},'
    '    { "column" : "ScenarioId", "DataType":"string", "Properties":{"Ordinal":"2"}},'
    '    { "column" : "Name", "DataType":"string", "Properties":{"Ordinal":"3"}},'
    '    { "column" : "Description", "DataType":"string", "Properties":{"Ordinal":"4"}},'
    '    { "column" : "ParentId", "DataType":"string", "Properties":{"Ordinal":"5"}},'
    '    { "column" : "SolutionName", "DataType":"string", "Properties":{"Ordinal":"6"}},'
    '    { "column" : "RunTemplateName", "DataType":"string", "Properties":{"Ordinal":"7"}},'
    '    { "column" : "ValidationStatus", "DataType":"string", "Properties":{"Ordinal":"8"}},'
    '    { "column" : "UpdateTime", "DataType":"datetime", "Properties":{"Ordinal":"9"}},'
    ']'
//
.create-merge table ScenarioRunMetadata
(
    SimulationRun:string,
    ScenarioId:string,
    ScenarioRunStartTime:datetime
)
//
.create-or-alter table ScenarioRunMetadata ingestion csv mapping "ScenarioRunMetadataMapping"
    '['
    '    { "column" : "SimulationRun", "DataType":"string", "Properties":{"Ordinal":"0"}},'
    '    { "column" : "ScenarioId", "DataType":"string", "Properties":{"Ordinal":"1"}},'
    '    { "column" : "ScenarioRunStartTime", "DataType":"datetime", "Properties":{"Ordinal":"2"}},'
    ']'
//
.create-or-alter function with (folder = "", docstring = "", skipvalidation = "true") GetScenarios()
{
    ScenarioMetadata
    | summarize arg_max(UpdateTime, *) by ScenarioId
    | lookup kind=inner
    (
        ScenarioRunMetadata
        | summarize arg_max(ScenarioRunStartTime, *) by ScenarioId
    ) on ScenarioId
    // add columns for compatibility with "old" GetScenarios function
    | extend LastSimulationRun = SimulationRun, ScenarioDate = ScenarioRunStartTime, ScenarioName = Name
}
//
.create-or-alter function  GetMeasures(Probe:string)
{
    ProbesMeasures
    | where ProbeType == Probe
    | extend Fact=FactsRaw
    | extend Common=CommonRaw
    | mv-expand Fact
    | evaluate bag_unpack(Fact)
    | evaluate bag_unpack(Common)
    | project-away FactsRaw, CommonRaw
}
//
.create-or-alter function  GetProbes()
{
    ProbesMeasures
    | distinct ProbeType
}
//
.create-or-alter function  GetScenarioMetadata()
{
    ScenarioRunMetadata
    | lookup kind=leftouter
    (
        ScenarioMetadata
        | project ScenarioId, Name, UpdateTime
        | summarize by ScenarioId, Name
    ) on ScenarioId
}
.create-or-alter function UpdateGetSimulations()
{
    ProbesMeasures
    | distinct SimulationRun, SimulationDate, SimulationName
}